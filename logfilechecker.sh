#!/bin/sh


###############################################################################
#
# Webserver Logfile Parser with Error Notification via Mail
#
###############################################################################


###############################################################################
# Configuration
###############################################################################

# Configure for which HTTP Status Codes you want to be notified
HTTPSTATUSCODES=(' 404 ' ' 500 ');

# Configure which IPs shall be excluded so that internal calls
# and traffic generated by developers won't show in notifications
IPSTOIGNORE=('123.123.123.123' '245.245.245.245');


###############################################################################
# The Script
###############################################################################

# Fetch the webserver's access.log + put it in /tmp/
scp -CBq user@1.2.3.4:/var/log/yourwebserver/access.log /tmp/access.log

# After fetching access.log, force the server to rotate logfiles
# This ensures that we are working on a fresh logfile every 24h (cronjob)
#
# IMPORTANT NOTE:
# Disable this if logfilerotate is enabled on the server!
#
ssh user@1.2.3.4 "/usr/sbin/logrotate -f /etc/logrotate.conf"

# Read the contents of access.log
ACCESSLOGCONTENTS=$(</tmp/access.log)

# For each error code you wish to check, iterate through the logfile
for((i=0;i<${#HTTPSTATUSCODES[@]};i++))
do

    # Gather all lines of access.log that contain the HTTP Error Code
    MATCHEDLINES=$(echo "$ACCESSLOGCONTENTS" | grep "${HTTPSTATUSCODES[$i]}")

    # Remove all traffic from the array of IPs that are to be ignored
    for((l=0;l<${#IPSTOIGNORE[@]};l++))
    do
        CLEANEDLINES=$(echo "$MATCHEDLINES" | sed "/${IPSTOIGNORE[$l]}/d")
        # Inherit prior changes to the dataset
        MATCHEDLINES=$CLEANEDLINES
    done

    # For each HTTP Status Error Code, send a separate notification email
    # but only send the mail if there actually are errors to be reported
    if [[ $MATCHEDLINES ]]; then
        echo "$MATCHEDLINES" | mail -s "Reporting HTTP Error Code: ${HTTPSTATUSCODES[$i]}" mail@yourdomain.com -- -F Server-Monitoring -f noreply@yourdomain.com
    fi

done

# Cleanup
rm /tmp/access.log


###############################################################################
# EOF
###############################################################################
